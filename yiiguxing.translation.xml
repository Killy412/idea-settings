<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogHeight" value="635" />
    <option name="newTranslationDialogWidth" value="816" />
    <option name="newTranslationDialogX" value="423" />
    <option name="newTranslationDialogY" value="257" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="path prefix to be used by all method-level mappings. Can be used with or" />
      <item value="an absolute URL or resolvable hostname (the protocol is optional)." />
      <item value="Lifecycle" />
      <item value="An annotation to create utility classes." />
      <item value="Dependency is duplicated in file(s):" />
      <item value="Consider defining a bean of type 'org.springframework.http.codec.ServerCodecConfigurer' in your configuration." />
      <item value="库存" />
      <item value="库存&#10;" />
      <item value="select" />
      <item value="Indicates that an annotation type is automatically inherited. If an Inherited meta-annotation is present on an annotation type declaration, and the user queries the annotation type on a class declaration, and the class declaration has no annotation for this type, then the class's superclass will automatically be queried for the annotation type. This process will be repeated until an annotation for this type is found, or the top of the class hierarchy (Object) is reached. If no superclass has an annotation for this type, then the query will indicate that the class in question has no such annotation." />
      <item value="An object that implements the Enumeration interface generates a series of elements, one at a time. Successive calls to the &lt;code&gt;nextElement&lt;code&gt; method return successive elements of the series." />
      <item value="Enumeration" />
      <item value="A {@link ConcurrentHashMap} that uses {@link ReferenceTypeSOFT soft} or {@linkplain ReferenceTypeWEAK weak} references for both {@code keys} and {@code values}." />
      <item value="Delegate for resolving constructors and factory methods. &lt;p&gt;Performs constructor resolution through argument matching." />
      <item value="cancelling refresh attempt" />
      <item value="Possibly consider using a shorter maxLifetime value." />
      <item value="ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.unicorn.system.feign.channel.ChannelFeignApi': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Method has too many Body parameters: public abstract com.unicorn.common.core.utils.RetDTO com.unicorn.system.feign.channel.ChannelFeignApi.listPageChannel(com.baomidou.mybatisplus.extension.plugins.pagination.Page,com.unicorn.system.dto.ChannelDTO)" />
      <item value="Parameter 0 of constructor in com.unicorn.common.log.LogAutoConfiguration required a bean of type 'com.unicorn.system.feign.sysoperlog.SysOperLogFeignApi' that could not be found." />
      <item value="Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format." />
      <item value="error while receiving push data" />
      <item value="The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:" />
      <item value="Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.unicorn.common.log.LogAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.unicorn.system.feign.sysoperlog.SysOperLogFeignApi': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.unicorn.system.feign.sysoperlog.factory.SysOperLogFeignApiFallbackFactory found for feign client sysoperlogfeignapi" />
      <item value="[com.unicorn.product.mapper.CustomerLevelMapper.insert] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Insert]" />
      <item value="The driver has not received any packets from the server" />
      <item value="The bean 'operLogAspect', defined in class path resource [comunicorncommonlogLogAutoConfiguration.class], could not be registered. A bean with that name has already been defined in file [homekillyhwProjectunicorn-parent-newmiddle-platformunicorn-commonunicorn-common-logtargetclassescomunicorncommonlogaspectOperLogAspect.class] and overriding is disabled." />
      <item value="Phantom reference objects, which are enqueued after the collector determines that their referents may otherwise be reclaimed. Phantom references are most often used for scheduling pre-mortem cleanup actions in a more flexible way than is possible with the Java finalization mechanism." />
      <item value="Some problems were encountered while building the effective model for com.hwidt:hwidt-fisco:jar:1.0.0" />
      <item value="Some problems were encountered while building the effective model for" />
      <item value="converd&#10;&#10;" />
      <item value="convert&#10;" />
      <item value="Converd" />
      <item value="Converd&#10;" />
      <item value="Conved" />
      <item value="Conver To Chinese Partcon" />
      <item value="Conver To Chinese Part" />
      <item value="Gets the system-wide security manager." />
      <item value="Java HotSpot(TM) 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended" />
      <item value="resolve" />
      <item value="Links the specified class. This (misleadingly named) method may be used by a class loader to link a class. If the class {@code c} has already been linked, then this method simply returns. Otherwise, the class is linked as described in the &quot;Execution&quot; chapter of &lt;cite&gt;The Java Language Specification&lt;cite&gt;." />
      <item value="Thrown if an application tries to create an array with negative size." />
      <item value="区块链&#10;" />
      <item value="上传合约&#10;" />
      <item value="上传" />
      <item value="get Parent File" />
      <item value="Returns a class loaded by the bootstrap class loader; or return null if not found." />
      <item value="Returns the system class loader for delegation. This is the default delegation parent for new &lt;tt&gt;ClassLoader&lt;tt&gt; instances, and is typically the class loader used to start the application." />
      <item value="A class loader is an object that is responsible for loading classes. The class &lt;tt&gt;ClassLoader&lt;tt&gt; is an abstract class. Given the &lt;a href=&quot;name&quot;&gt;binary name&lt;a&gt; of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a &quot;class file&quot; of that name from a file system." />
      <item value="&lt;p&gt; Every {@link Class &lt;tt&gt;Class&lt;tt&gt;} object contains a {@link ClassgetClassLoader() reference} to the &lt;tt&gt;ClassLoader&lt;tt&gt; that defined it." />
      <item value="Parameter" />
      <item value="Prepared" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="99" />
        <entry key="ENGLISH" value="100" />
        <entry key="GREEK" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1609133689538" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200306000393838" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
  </component>
</application>