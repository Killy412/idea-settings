<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogHeight" value="635" />
    <option name="newTranslationDialogWidth" value="818" />
    <option name="newTranslationDialogX" value="969" />
    <option name="newTranslationDialogY" value="9" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="The driver has not received any packets from the server" />
      <item value="The bean 'operLogAspect', defined in class path resource [comunicorncommonlogLogAutoConfiguration.class], could not be registered. A bean with that name has already been defined in file [homekillyhwProjectunicorn-parent-newmiddle-platformunicorn-commonunicorn-common-logtargetclassescomunicorncommonlogaspectOperLogAspect.class] and overriding is disabled." />
      <item value="Phantom reference objects, which are enqueued after the collector determines that their referents may otherwise be reclaimed. Phantom references are most often used for scheduling pre-mortem cleanup actions in a more flexible way than is possible with the Java finalization mechanism." />
      <item value="Some problems were encountered while building the effective model for com.hwidt:hwidt-fisco:jar:1.0.0" />
      <item value="Some problems were encountered while building the effective model for" />
      <item value="converd&#10;&#10;" />
      <item value="convert&#10;" />
      <item value="Converd" />
      <item value="Converd&#10;" />
      <item value="Conved" />
      <item value="Conver To Chinese Partcon" />
      <item value="Conver To Chinese Part" />
      <item value="Gets the system-wide security manager." />
      <item value="Java HotSpot(TM) 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended" />
      <item value="resolve" />
      <item value="Links the specified class. This (misleadingly named) method may be used by a class loader to link a class. If the class {@code c} has already been linked, then this method simply returns. Otherwise, the class is linked as described in the &quot;Execution&quot; chapter of &lt;cite&gt;The Java Language Specification&lt;cite&gt;." />
      <item value="Thrown if an application tries to create an array with negative size." />
      <item value="区块链&#10;" />
      <item value="上传合约&#10;" />
      <item value="上传" />
      <item value="get Parent File" />
      <item value="Returns a class loaded by the bootstrap class loader; or return null if not found." />
      <item value="Returns the system class loader for delegation. This is the default delegation parent for new &lt;tt&gt;ClassLoader&lt;tt&gt; instances, and is typically the class loader used to start the application." />
      <item value="A class loader is an object that is responsible for loading classes. The class &lt;tt&gt;ClassLoader&lt;tt&gt; is an abstract class. Given the &lt;a href=&quot;name&quot;&gt;binary name&lt;a&gt; of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a &quot;class file&quot; of that name from a file system." />
      <item value="&lt;p&gt; Every {@link Class &lt;tt&gt;Class&lt;tt&gt;} object contains a {@link ClassgetClassLoader() reference} to the &lt;tt&gt;ClassLoader&lt;tt&gt; that defined it." />
      <item value="Parameter" />
      <item value="Prepared" />
      <item value="Mutex" />
      <item value="An object that represents a precompiled SQL statement. &lt;P&gt;A SQL statement is precompiled and stored in a &lt;code&gt;PreparedStatement&lt;code&gt; object. This object can then be used to efficiently execute this statement multiple times." />
      <item value="Method handles" />
      <item value="A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values. These transformations are quite general, and include such patterns as" />
      <item value="周日" />
      <item value="zhou&#10;" />
      <item value="today&#10;" />
      <item value="org.springframework.dao.DataIntegrityViolationException: Error attempting to get column 'procurementNumber' from result set. Cause: java.sql.SQLDataException: Cannot determine value type from string 'HW93982734' ; Cannot determine value type from string 'HW93982734'; nested exception is java.sql.SQLDataException: Cannot determine value type from string 'HW93982734'" />
      <item value="dec&#10;" />
      <item value="周一&#10;&#10;" />
      <item value="明天&#10;" />
      <item value="明天&#10;&#10;" />
      <item value="today" />
      <item value="数据&#10;" />
      <item value="Invalid bound statement (not found): com.hwidt.system.mapper.SysConfigMapper.selectConfigList" />
      <item value="put&#10;" />
      <item value="You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '() not null," />
      <item value="清除数据&#10;" />
      <item value="清除数据" />
      <item value="清除" />
      <item value="q" />
      <item value="g" />
      <item value="周二" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="80" />
        <entry key="ENGLISH" value="81" />
        <entry key="GREEK" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1608532088108" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200306000393838" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
  </component>
</application>