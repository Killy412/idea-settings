<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogHeight" value="447" />
    <option name="newTranslationDialogWidth" value="444" />
    <option name="newTranslationDialogX" value="612" />
    <option name="newTranslationDialogY" value="155" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Walkthrough: 1. If read count nonzero or write count nonzero and owner is a different thread, fail. 2. If count would saturate, fail. (This can only happen if count is already nonzero.) 3. Otherwise, this thread is eligible for lock if it is either a reentrant acquire or queue policy allows it. If so, update state and set owner." />
      <item value="Release" />
      <item value="Decrements the count of the latch, releasing all waiting threads if the count reaches zero. &lt;p&gt;If the current count is greater than zero then it is decremented. If the new count is zero then all waiting threads are re-enabled for thread scheduling purposes. &lt;p&gt;If the current count equals zero then nothing happens." />
      <item value="Head of the wait queue, lazily initialized. Except for initialization, it is modified only via method setHead. Note: If head exists, its waitStatus is guaranteed not to be CANCELLED." />
      <item value="The synchronization state." />
      <item value="head" />
      <item value="tail" />
      <item value="ThreadLocalMap is a customized hash map suitable only for maintaining thread local values. No operations are exported outside of the ThreadLocal class. The class is package private to allow declaration of fields in class Thread. To help deal with very large and long-lived usages, the hash table entries use WeakReferences for keys. However, since reference queues are not used, stale entries are guaranteed to be removed only when the table starts running out of space." />
      <item value="correct" />
      <item value="seata&#10;" />
      <item value="Please check the cluster status" />
      <item value="please make sure registry config correct" />
      <item value="The class hierarchy was loaded from the following locations:" />
      <item value="discovery" />
      <item value="depend" />
      <item value="volumes" />
      <item value="provider" />
      <item value="obtain" />
      <item value="circuit" />
      <item value="微服务" />
      <item value="微服务&#10;" />
      <item value="分布式&#10;" />
      <item value="The last packet successfully received from the server was 2,354,931 milliseconds ago." />
      <item value="received" />
      <item value="service" />
      <item value="serve" />
      <item value="server" />
      <item value="Coupon" />
      <item value="Returns a {@code BigDecimal} whose value is {@code (this divisor)}, and whose preferred scale is {@code (this.scale() - divisor.scale())}; if the exact quotient cannot be represented (because it has a non-terminating decimal expansion) an {@code ArithmeticException} is thrown." />
      <item value="The value may indicate a suggestion for a logical component name, to be turned into a Spring bean in case of an autodetected component. @return the suggested component name, if any (or empty String otherwise)" />
      <item value="divide" />
      <item value="multiply" />
      <item value="strategy" />
      <item value="strat" />
      <item value="rules&#10;" />
      <item value="inteactive" />
      <item value="inteActive" />
      <item value="interActive" />
      <item value="interActivb" />
      <item value="interAc" />
      <item value="interA" />
      <item value="inter" />
      <item value="inte" />
      <item value="inte&#10;" />
      <item value="method the {@code Method} instance corresponding to the interface method invoked on the proxy instance. The declaring class of the {@code Method} object will be the interface that the method was declared in, which may be a superinterface of the proxy interface that the proxy class inherits the method through." />
      <item value="proxy the proxy instance that the method was invoked on" />
      <item value="the proxy instance that the method was invoked on" />
      <item value="&lt;p&gt;Each proxy instance has an associated invocation handler. When a method is invoked on a proxy instance, the method invocation is encoded and dispatched to the {@code invoke} method of its invocation handler." />
      <item value="When a method is invoked on a proxy instance" />
      <item value="an associated invocation handler." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="205" />
        <entry key="ENGLISH" value="206" />
        <entry key="IRISH" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="GREEK" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1612686755583" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200306000393838" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
  </component>
</application>